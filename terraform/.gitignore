# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

##Эта конфигурация помогает убедиться, что чувствительная информация и ненужные файлы не попадают в систему контроля версий. Вот подробное объяснение того, что делает каждый раздел:

1. Локальные директории .terraform: Игнорирует все файлы в любых директориях .terraform, которые используются Terraform для хранения своего состояния и конфигурации.

2. Файлы .tfstate: Исключает все файлы состояния Terraform и любые связанные с ними файлы, которые могут содержать чувствительную информацию о ресурсах инфраструктуры.

3. Файлы журналов сбоев: Игнорирует файлы журналов, создаваемые при сбое Terraform.

4. Файлы .tfvars: Исключает файлы .tfvars, которые обычно содержат значения переменных, специфичных для среды, включая чувствительные данные, такие как пароли или приватные ключи.

5. Файлы переопределения (Override): Исключает локальные файлы переопределения, которые могут использоваться для временных изменений ресурсов, что позволяет избежать загромождения в системе контроля версий.

6. Временные файлы блокировки: Игнорирует файлы блокировки, создаваемые во время работы Terraform, чтобы избежать конфликтов и обеспечить согласованное управление состоянием.

7. Включенные файлы переопределения: Вы можете указать конкретные файлы переопределения, которые хотите включить в систему контроля версий, используя отрицательные паттерны.

8. Файлы TFPlan: Указывает, что файлы выходных данных планов от Terraform обычно следует игнорировать, если не указано иное.

9. Файлы конфигурации CLI: Исключает файлы конфигурации Terraform, предназначенные для CLI, так как они могут быть ненужными для общего использования в разных условиях.